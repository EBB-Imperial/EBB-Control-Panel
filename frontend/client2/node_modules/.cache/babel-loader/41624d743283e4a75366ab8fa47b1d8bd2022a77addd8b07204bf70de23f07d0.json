{"ast":null,"code":"var _jsxFileName = \"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport Maze from './Import/Maze';\nimport * as Control_Module from './Import/Control_Button';\nimport Image_display from \"./Import/Image_display\";\nimport CreateDataTable from \"./Import/Data_table\";\nimport ReactPolling from \"react-polling/lib/ReactPolling\";\nimport CreateProgressBar from \"./Import/Progress_Bar\";\nimport create_replay_button from \"./Import/Replay_button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // document.body.appendChild(CreateDataTable(data.data_)\n  const [mazeMatrix, updateMap] = useState([[]]);\n  const [data_, updateData] = useState([[]]);\n  const [ReplayMap, updateReplayMap] = useState([[]]);\n  Image_display();\n  Control_Module.Control_Button();\n  create_replay_button();\n  React.useEffect(() => {\n    ///See CORS\n\n    fetch(\"http://localhost:3001/ReplayMap/\").then(res => res.json()).then(data => updateReplayMap(data.ReplayMap)).catch(err => alert(\"ReplayMap\" + err));\n    fetch(\"http://localhost:3001/mazeMatrix/\").then(res => res.json()).then(data => updateMap(data.mazeMatrix)).catch(err => alert(err));\n    fetch(\"http://localhost:3001/display_data\").then(res => res.json()).then(data => {\n      const get_table = CreateDataTable(data.data_);\n      if (document.getElementById('data_table') != null) {\n        document.getElementById('data_table').replaceWith(get_table);\n      } else {\n        document.body.appendChild(get_table);\n      }\n    }).catch(err => alert(err));\n\n    // fetch(\"http://localhost:3001/robot_history/\")\n    //      .then((res) => res.json())\n    //     //  .then((data) => alert(JSON.stringify(data)))\n    //      .catch((err) => alert(err)\n    //       );\n  }, [updateMap, updateData]);\n  const pollingSuccess = jsonResponse => {\n    updateData(jsonResponse.data_);\n    return true;\n  };\n  const pollingFailure = () => {\n    alert('Polling failed');\n    return true;\n  };\n  const fetchData = () => {\n    return fetch(\"http://localhost:3001/display_data/\");\n  };\n  const pollingSuccess_2 = jsonResponse => {\n    updateReplayMap(jsonResponse.ReplayMap);\n    return true;\n  };\n  const fetchData_2 = () => {\n    return fetch(\"http://localhost:3001/ReplayMatrix/\");\n  };\n  const handleClickRandom = updateMethod => {\n    fetch(\"http://localhost:3001/mazeMatrix/\").then(res => res.json()).then(data => updateMethod(data.mazeMatrix)).catch(err => alert(err));\n  };\n\n  // const handleDateUpdate = (updateMethod) => { \n  //   fetch(\"http://localhost:3001/display_data/\")\n  //     .then((res) => res.json())\n  //     .then((data) => updateData(data.data_))\n  //     .catch((err) => alert(err));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '36px'\n      },\n      children: \" EBB-Imperial   Maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maze, {\n      td: mazeMatrix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClickRandom(updateMap),\n      children: \"Randomize Maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      max: \"100\",\n      value: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPolling, {\n      url: 'http://localhost:3001/display_data/',\n      interval: 200 // in milliseconds(ms)\n      ,\n      retryCount: 3 // this is optional\n      ,\n      onSuccess: pollingSuccess,\n      onFailure: pollingFailure,\n      promise: fetchData // custom api calling function that should return a promise\n      ,\n      render: _ref => {\n        let {\n          startPolling,\n          stopPolling,\n          isPolling\n        } = _ref;\n        const oldTable = document.getElementById('data_table');\n        const newTable = CreateDataTable(data_);\n        // document.replaceChild(newTable, oldTable);\n        if (oldTable != null) {\n          oldTable.replaceWith(newTable);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPolling, {\n      url: 'http://localhost:3001/ReplayMatrix',\n      interval: 1000 // in milliseconds(ms)\n      ,\n      retryCount: 3 // this is optional\n      ,\n      onSuccess: pollingSuccess_2,\n      onFailure: pollingFailure,\n      promise: fetchData_2 // custom api calling function that should return a promise\n      ,\n      render: _ref2 => {\n        let {\n          startPolling,\n          stopPolling,\n          isPolling\n        } = _ref2;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maze, {\n      td: ReplayMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rdDTC2US7y9Ui28RLrNlFdXH0JI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Maze","Control_Module","Image_display","CreateDataTable","ReactPolling","CreateProgressBar","create_replay_button","jsxDEV","_jsxDEV","App","_s","mazeMatrix","updateMap","data_","updateData","ReplayMap","updateReplayMap","Control_Button","useEffect","fetch","then","res","json","data","catch","err","alert","get_table","document","getElementById","replaceWith","body","appendChild","pollingSuccess","jsonResponse","pollingFailure","fetchData","pollingSuccess_2","fetchData_2","handleClickRandom","updateMethod","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","td","onClick","id","max","value","url","interval","retryCount","onSuccess","onFailure","promise","render","_ref","startPolling","stopPolling","isPolling","oldTable","newTable","_ref2","_c","$RefreshReg$"],"sources":["/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js"],"sourcesContent":["import React, {useState} from \"react\"; \nimport './App.css';\nimport Maze from './Import/Maze';\nimport * as Control_Module from './Import/Control_Button';\nimport Image_display from \"./Import/Image_display\";\nimport CreateDataTable from \"./Import/Data_table\";\nimport ReactPolling from \"react-polling/lib/ReactPolling\";\nimport CreateProgressBar from \"./Import/Progress_Bar\";\nimport create_replay_button from \"./Import/Replay_button\";\n\nfunction App() {\n  \n  // document.body.appendChild(CreateDataTable(data.data_)\n  const [mazeMatrix, updateMap] = useState([[]]);\n  const [data_, updateData] = useState([[]]);\n  const [ReplayMap, updateReplayMap] = useState([[]])\n  \n\n  \n  Image_display();\n  Control_Module.Control_Button();\n  create_replay_button()\n\n \n\n\n  React.useEffect(() => { ///See CORS\n\n    fetch(\"http://localhost:3001/ReplayMap/\") \n      .then((res) => res.json())\n      .then((data) => updateReplayMap(data.ReplayMap)) \n      .catch((err) => alert(\"ReplayMap\" + err)\n    );\n\n    fetch(\"http://localhost:3001/mazeMatrix/\") \n        .then((res) => res.json())\n        .then((data) => updateMap(data.mazeMatrix)) \n        .catch((err) => alert(err)\n    );\n\n    fetch(\"http://localhost:3001/display_data\")\n        .then((res) => res.json())\n        .then((data) => {\n          const get_table = CreateDataTable(data.data_);\n          if (document.getElementById('data_table') != null){\n            document.getElementById('data_table').replaceWith(get_table);\n          }\n          else {\n            document.body.appendChild(get_table)\n        }})\n        .catch((err) => alert(err));\n\n    // fetch(\"http://localhost:3001/robot_history/\")\n    //      .then((res) => res.json())\n    //     //  .then((data) => alert(JSON.stringify(data)))\n    //      .catch((err) => alert(err)\n    //       );\n         \n  }, [updateMap, updateData]);\n\n  const pollingSuccess = (jsonResponse) => {\n    updateData(jsonResponse.data_)\n    return true;\n  }\n  \n  const pollingFailure = () => { \n    alert('Polling failed');\n    return true;\n  }\n\n  const fetchData = () => {\n    return fetch(\"http://localhost:3001/display_data/\");\n  }\n\n  const pollingSuccess_2 = (jsonResponse) => {\n    updateReplayMap(jsonResponse.ReplayMap)\n    return true;\n  }\n\n  const fetchData_2 = () => {\n    return fetch(\"http://localhost:3001/ReplayMatrix/\");\n  }\n\n\n  const handleClickRandom = (updateMethod) => { \n    fetch(\"http://localhost:3001/mazeMatrix/\")\n      .then((res) => res.json())\n      .then((data) => updateMethod(data.mazeMatrix)) \n      .catch((err) => alert(err)\n    );}\n  \n\n  // const handleDateUpdate = (updateMethod) => { \n  //   fetch(\"http://localhost:3001/display_data/\")\n  //     .then((res) => res.json())\n  //     .then((data) => updateData(data.data_))\n  //     .catch((err) => alert(err));\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '36px' }}> EBB-Imperial   Maze</h1>\n      <Maze td = {mazeMatrix}/>\n      <button onClick={() => handleClickRandom(updateMap)}>Randomize Maze</button>\n      <div id=\"result\"></div>\n      <progress max=\"100\" value=\"50\"></progress>\n      <ReactPolling\n        url={'http://localhost:3001/display_data/'}\n        interval= {200} // in milliseconds(ms)\n        retryCount={3} // this is optional\n        onSuccess = {pollingSuccess}\n        onFailure= {pollingFailure}\n        promise={fetchData} // custom api calling function that should return a promise\n        render={({ startPolling, stopPolling, isPolling }) => {\n          const oldTable = document.getElementById('data_table');\n          const newTable = CreateDataTable(data_);\n          // document.replaceChild(newTable, oldTable);\n          if (oldTable != null){\n            oldTable.replaceWith(newTable);\n          }\n        }}\n      />\n      \n      <ReactPolling\n        url={'http://localhost:3001/ReplayMatrix'}\n        interval= {1000} // in milliseconds(ms)\n        retryCount={3} // this is optional\n        onSuccess = {pollingSuccess_2}\n        onFailure= {pollingFailure}\n        promise={fetchData_2} // custom api calling function that should return a promise\n        render={({ startPolling, stopPolling, isPolling }) => {\n          \n        }}\n      />\n      <Maze td = {ReplayMap}/>\n      {/* <div id=\"dataDisplay\"></div> */}\n    </div> );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAO,KAAKC,cAAc,MAAM,yBAAyB;AACzD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,iBAAiB,MAAM,uBAAuB;AACrD,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,UAAU,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1C,MAAM,CAACgB,SAAS,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAInDG,aAAa,CAAC,CAAC;EACfD,cAAc,CAACgB,cAAc,CAAC,CAAC;EAC/BX,oBAAoB,CAAC,CAAC;EAKtBR,KAAK,CAACoB,SAAS,CAAC,MAAM;IAAE;;IAEtBC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,eAAe,CAACO,IAAI,CAACR,SAAS,CAAC,CAAC,CAC/CS,KAAK,CAAEC,GAAG,IAAKC,KAAK,CAAC,WAAW,GAAGD,GAAG,CACzC,CAAC;IAEDN,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKX,SAAS,CAACW,IAAI,CAACZ,UAAU,CAAC,CAAC,CAC1Ca,KAAK,CAAEC,GAAG,IAAKC,KAAK,CAACD,GAAG,CAC7B,CAAC;IAEDN,KAAK,CAAC,oCAAoC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMI,SAAS,GAAGxB,eAAe,CAACoB,IAAI,CAACV,KAAK,CAAC;MAC7C,IAAIe,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,IAAI,IAAI,EAAC;QAChDD,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,WAAW,CAACH,SAAS,CAAC;MAC9D,CAAC,MACI;QACHC,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,SAAS,CAAC;MACxC;IAAC,CAAC,CAAC,CACFH,KAAK,CAAEC,GAAG,IAAKC,KAAK,CAACD,GAAG,CAAC,CAAC;;IAE/B;IACA;IACA;IACA;IACA;EAEF,CAAC,EAAE,CAACb,SAAS,EAAEE,UAAU,CAAC,CAAC;EAE3B,MAAMmB,cAAc,GAAIC,YAAY,IAAK;IACvCpB,UAAU,CAACoB,YAAY,CAACrB,KAAK,CAAC;IAC9B,OAAO,IAAI;EACb,CAAC;EAED,MAAMsB,cAAc,GAAGA,CAAA,KAAM;IAC3BT,KAAK,CAAC,gBAAgB,CAAC;IACvB,OAAO,IAAI;EACb,CAAC;EAED,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtB,OAAOjB,KAAK,CAAC,qCAAqC,CAAC;EACrD,CAAC;EAED,MAAMkB,gBAAgB,GAAIH,YAAY,IAAK;IACzClB,eAAe,CAACkB,YAAY,CAACnB,SAAS,CAAC;IACvC,OAAO,IAAI;EACb,CAAC;EAED,MAAMuB,WAAW,GAAGA,CAAA,KAAM;IACxB,OAAOnB,KAAK,CAAC,qCAAqC,CAAC;EACrD,CAAC;EAGD,MAAMoB,iBAAiB,GAAIC,YAAY,IAAK;IAC1CrB,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKiB,YAAY,CAACjB,IAAI,CAACZ,UAAU,CAAC,CAAC,CAC7Ca,KAAK,CAAEC,GAAG,IAAKC,KAAK,CAACD,GAAG,CAC3B,CAAC;EAAC,CAAC;;EAGL;EACA;EACA;EACA;EACA;;EAEA,oBACEjB,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlC,OAAA;MAAImC,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1DxC,OAAA,CAACR,IAAI;MAACiD,EAAE,EAAItC;IAAW;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzBxC,OAAA;MAAQ0C,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAAC3B,SAAS,CAAE;MAAA8B,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5ExC,OAAA;MAAK2C,EAAE,EAAC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvBxC,OAAA;MAAU4C,GAAG,EAAC,KAAK;MAACC,KAAK,EAAC;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC1CxC,OAAA,CAACJ,YAAY;MACXkD,GAAG,EAAE,qCAAsC;MAC3CC,QAAQ,EAAG,GAAI,CAAC;MAAA;MAChBC,UAAU,EAAE,CAAE,CAAC;MAAA;MACfC,SAAS,EAAIxB,cAAe;MAC5ByB,SAAS,EAAGvB,cAAe;MAC3BwB,OAAO,EAAEvB,SAAU,CAAC;MAAA;MACpBwB,MAAM,EAAEC,IAAA,IAA8C;QAAA,IAA7C;UAAEC,YAAY;UAAEC,WAAW;UAAEC;QAAU,CAAC,GAAAH,IAAA;QAC/C,MAAMI,QAAQ,GAAGrC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;QACtD,MAAMqC,QAAQ,GAAG/D,eAAe,CAACU,KAAK,CAAC;QACvC;QACA,IAAIoD,QAAQ,IAAI,IAAI,EAAC;UACnBA,QAAQ,CAACnC,WAAW,CAACoC,QAAQ,CAAC;QAChC;MACF;IAAE;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEFxC,OAAA,CAACJ,YAAY;MACXkD,GAAG,EAAE,oCAAqC;MAC1CC,QAAQ,EAAG,IAAK,CAAC;MAAA;MACjBC,UAAU,EAAE,CAAE,CAAC;MAAA;MACfC,SAAS,EAAIpB,gBAAiB;MAC9BqB,SAAS,EAAGvB,cAAe;MAC3BwB,OAAO,EAAErB,WAAY,CAAC;MAAA;MACtBsB,MAAM,EAAEO,KAAA,IAA8C;QAAA,IAA7C;UAAEL,YAAY;UAAEC,WAAW;UAAEC;QAAU,CAAC,GAAAG,KAAA;MAEjD;IAAE;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFxC,OAAA,CAACR,IAAI;MAACiD,EAAE,EAAIlC;IAAU;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErB,CAAC;AACV;AAACtC,EAAA,CA9HQD,GAAG;AAAA2D,EAAA,GAAH3D,GAAG;AA+HZ,eAAeA,GAAG;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
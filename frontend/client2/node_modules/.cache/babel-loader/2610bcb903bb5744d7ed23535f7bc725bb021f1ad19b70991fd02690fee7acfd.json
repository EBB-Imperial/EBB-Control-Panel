{"ast":null,"code":"import _slicedToArray from\"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import Maze from'./Import/Maze';import*as Control_Module from'./Import/Control_Button';import Image_display from\"./Import/Image_display\";import CreateDataTable from\"./Import/Data_table\";import ReactPolling from\"react-polling/lib/ReactPolling\";import CreateProgressBar from\"./Import/Progress_Bar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _Control_Module$Contr=Control_Module.Control_Button(),_Control_Module$Contr2=_slicedToArray(_Control_Module$Contr,2),buttonContainer=_Control_Module$Contr2[0],data=_Control_Module$Contr2[1];var _useState=useState([[]]),_useState2=_slicedToArray(_useState,2),mazeMatrix=_useState2[0],updateMap=_useState2[1];var _useState3=useState([[]]),_useState4=_slicedToArray(_useState3,2),data_=_useState4[0],updateData=_useState4[1];Image_display();// const progressBar = document.createElement('progress');\n// progressBar.max = 100; // Set the maximum value of the progress bar\n// progressBar.value = 50; // Set the initial value of the progress bar (between 0 \n// // document.body.appendChild(progressBar);\n// console.log(progressBar);\nvar pollingSuccess=function pollingSuccess(jsonResponse){updateData(jsonResponse.data_);return true;};var pollingFailure=function pollingFailure(){alert('Polling failed');return true;};var fetchData=function fetchData(){return fetch(\"http://localhost:3001/display_data/\");};React.useEffect(function(){///See CORS\nfetch(\"http://localhost:3001/mazeMatrix/\").then(function(res){return res.json();}).then(function(data){return updateMap(data.mazeMatrix);}).catch(function(err){return alert(err);});fetch(\"http://localhost:3001/display_data\").then(function(res){return res.json();}).then(function(data){var get_table=CreateDataTable(data.data_);if(document.getElementById('data_table')!=null){document.getElementById('data_table').replaceWith(get_table);}else{document.body.appendChild(get_table);}}).catch(function(err){return alert(err);});},[updateMap,updateData]);// document.body.appendChild(CreateDataTable(data.data_)\nvar handleClickRandom=function handleClickRandom(updateMethod){fetch(\"http://localhost:3001/mazeMatrix/\").then(function(res){return res.json();}).then(function(data){return updateMethod(data.mazeMatrix);}).catch(function(err){return alert(err);});};// const handleDateUpdate = (updateMethod) => { \n//   fetch(\"http://localhost:3001/display_data/\")\n//     .then((res) => res.json())\n//     .then((data) => updateData(data.data_))\n//     .catch((err) => alert(err));\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'36px'},children:\" EBB-Imperial   Maze\"}),/*#__PURE__*/_jsx(Maze,{td:mazeMatrix}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleClickRandom(updateMap);},children:\"Randomize Maze\"}),/*#__PURE__*/_jsx(\"div\",{id:\"result\"}),/*#__PURE__*/_jsx(\"progress\",{max:\"100\",value:\"50\"}),/*#__PURE__*/_jsx(ReactPolling,{url:'http://localhost:3001/display_data/',interval:200// in milliseconds(ms)\n,retryCount:3// this is optional\n,onSuccess:pollingSuccess,onFailure:pollingFailure,promise:fetchData// custom api calling function that should return a promise\n,render:function render(_ref){var startPolling=_ref.startPolling,stopPolling=_ref.stopPolling,isPolling=_ref.isPolling;var oldTable=document.getElementById('data_table');var newTable=CreateDataTable(data_);// document.replaceChild(newTable, oldTable);\nif(oldTable!=null){oldTable.replaceWith(newTable);}}})]});}export default App;","map":{"version":3,"names":["React","useState","Maze","Control_Module","Image_display","CreateDataTable","ReactPolling","CreateProgressBar","jsx","_jsx","jsxs","_jsxs","App","_Control_Module$Contr","Control_Button","_Control_Module$Contr2","_slicedToArray","buttonContainer","data","_useState","_useState2","mazeMatrix","updateMap","_useState3","_useState4","data_","updateData","pollingSuccess","jsonResponse","pollingFailure","alert","fetchData","fetch","useEffect","then","res","json","catch","err","get_table","document","getElementById","replaceWith","body","appendChild","handleClickRandom","updateMethod","className","children","style","fontSize","td","onClick","id","max","value","url","interval","retryCount","onSuccess","onFailure","promise","render","_ref","startPolling","stopPolling","isPolling","oldTable","newTable"],"sources":["/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js"],"sourcesContent":["import React, {useState} from \"react\"; \nimport Maze from './Import/Maze';\nimport * as Control_Module from './Import/Control_Button';\nimport Image_display from \"./Import/Image_display\";\nimport CreateDataTable from \"./Import/Data_table\";\nimport ReactPolling from \"react-polling/lib/ReactPolling\";\nimport CreateProgressBar from \"./Import/Progress_Bar\";\n\nfunction App() {\n  const [buttonContainer, data] = Control_Module.Control_Button();\n  const [mazeMatrix, updateMap] = useState([[]]);\n  const [data_, updateData] = useState([[]]);\n\n  Image_display();\n\n  // const progressBar = document.createElement('progress');\n  // progressBar.max = 100; // Set the maximum value of the progress bar\n  // progressBar.value = 50; // Set the initial value of the progress bar (between 0 \n  // // document.body.appendChild(progressBar);\n  // console.log(progressBar);\n  \n  const pollingSuccess = (jsonResponse) => {\n    updateData(jsonResponse.data_)\n    return true;\n  }\n  \n  const pollingFailure = () => { \n    alert('Polling failed');\n    return true;\n  }\n\n  const fetchData = () => {\n    return fetch(\"http://localhost:3001/display_data/\");\n  }\n  \n  React.useEffect(() => { ///See CORS\n    fetch(\"http://localhost:3001/mazeMatrix/\") \n        .then((res) => res.json())\n        .then((data) => updateMap(data.mazeMatrix)) \n        .catch((err) => alert(err)\n    );\n    fetch(\"http://localhost:3001/display_data\")\n        .then((res) => res.json())\n        .then((data) => {\n          const get_table = CreateDataTable(data.data_);\n          if (document.getElementById('data_table') != null){\n            document.getElementById('data_table').replaceWith(get_table);\n          }\n          else {\n            document.body.appendChild(get_table)\n        }})\n        .catch((err) => alert(err));\n  }, [updateMap, updateData]);\n  // document.body.appendChild(CreateDataTable(data.data_)\n\n  const handleClickRandom = (updateMethod) => { \n    fetch(\"http://localhost:3001/mazeMatrix/\")\n      .then((res) => res.json())\n      .then((data) => updateMethod(data.mazeMatrix)) \n      .catch((err) => alert(err)\n    );}\n  \n  // const handleDateUpdate = (updateMethod) => { \n  //   fetch(\"http://localhost:3001/display_data/\")\n  //     .then((res) => res.json())\n  //     .then((data) => updateData(data.data_))\n  //     .catch((err) => alert(err));\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '36px' }}> EBB-Imperial   Maze</h1>\n      <Maze td = {mazeMatrix}/>\n      <button onClick={() => handleClickRandom(updateMap)}>Randomize Maze</button>\n      <div id=\"result\"></div>\n      <progress max=\"100\" value=\"50\"></progress>\n      <ReactPolling\n        url={'http://localhost:3001/display_data/'}\n        interval= {200} // in milliseconds(ms)\n        retryCount={3} // this is optional\n        onSuccess = {pollingSuccess}\n        onFailure= {pollingFailure}\n        promise={fetchData} // custom api calling function that should return a promise\n        render={({ startPolling, stopPolling, isPolling }) => {\n          const oldTable = document.getElementById('data_table');\n          const newTable = CreateDataTable(data_);\n          // document.replaceChild(newTable, oldTable);\n          if (oldTable != null){\n            oldTable.replaceWith(newTable);\n          }\n        }}\n      />\n    </div> );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
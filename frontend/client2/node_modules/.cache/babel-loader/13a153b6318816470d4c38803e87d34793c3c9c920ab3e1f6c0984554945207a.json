{"ast":null,"code":"var _jsxFileName = \"/Users/wujunyi/Desktop/Year2_Project/frontend/client2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Maze from './Maze';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Create the container div and add it to the body\n  const buttonContainer = document.createElement('div');\n  buttonContainer.id = 'buttonContainer';\n  document.body.appendChild(buttonContainer);\n\n  // Create the four buttons\n  const btnForward = document.createElement('button');\n  btnForward.textContent = 'Forward';\n  const btnBackward = document.createElement('button');\n  btnBackward.textContent = 'Backward';\n  const btnLeft = document.createElement('button');\n  btnLeft.textContent = 'Left';\n  const btnRight = document.createElement('button');\n  btnRight.textContent = 'Right';\n\n  // Add the buttons to the container\n  buttonContainer.appendChild(btnForward);\n  buttonContainer.appendChild(btnBackward);\n  buttonContainer.appendChild(btnLeft);\n  buttonContainer.appendChild(btnRight);\n\n  // Add CSS styles to the container and buttons\n  buttonContainer.style.position = 'absolute';\n  buttonContainer.style.left = '50%';\n  buttonContainer.style.top = '50%';\n  buttonContainer.style.transform = 'translate(-50%, -50%)';\n  buttonContainer.style.textAlign = 'center';\n  const buttons = buttonContainer.getElementsByTagName('button');\n  for (let i = 0; i < buttons.length; i++) {\n    const button = buttons[i];\n    button.style.width = '200px';\n    button.style.height = '60px';\n    button.style.marginBottom = '10px';\n  }\n  const [mazeMatrix, updateMap] = useState([[]]);\n  React.useEffect(() => {\n    ///See CORS\n    fetch(\"http://localhost:3001/mazeMatrix/\").then(res => res.json()).then(data => updateMap(data.mazeMatrix)).catch(err => alert(err));\n  }, [updateMap]);\n  const handleClick = updateMethod => {\n    fetch(\"http://localhost:3001/mazeMatrix/\").then(res => res.json()).then(data => updateMethod(data.mazeMatrix)).catch(err => alert(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '36px'\n      },\n      children: \"EBB-Imperial   Maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maze, {\n      td: mazeMatrix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(updateMap),\n      children: \"Randomize Maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttonContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r1cUgXk4SL/NPQ1vaI9VdR/cluY=\");\n_c = App;\nexport default App;\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       mazeMatrix: [\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n//         [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 0, 0, 1],\n//         [1, 0, 0, 0, 0, 0, 1, 0, 0, 1],\n//         [1, 0, 0, 0, 0, 0, 1, 0, 0, 1],\n//         [1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n//         [1, 0, 0, 1, 0, 0, 0, 0, 0, 1],\n//         [1, 0, 0, 1, 0, 0, 0, 0, 0, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//       ]\n//     };\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h1 style={{ fontSize: '36px' }}>Maze Game</h1>\n//         <div style={{ display: 'flex', justifyContent: 'center' }}>\n//           <div>\n//             {this.state.mazeMatrix.map((row, rowIndex) => (\n//               <div key={rowIndex}>\n//                 {row.map((cell, cellIndex) => (\n//                   <div\n//                     key={cellIndex}\n//                     style={{\n//                       display: 'inline-block',\n//                       width: '20px',\n//                       height: '20px',\n//                       backgroundColor: cell === 1 ? 'black' : 'white'\n//                     }}\n//                   />\n//                 ))}\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Maze","jsxDEV","_jsxDEV","App","_s","buttonContainer","document","createElement","id","body","appendChild","btnForward","textContent","btnBackward","btnLeft","btnRight","style","position","left","top","transform","textAlign","buttons","getElementsByTagName","i","length","button","width","height","marginBottom","mazeMatrix","updateMap","useEffect","fetch","then","res","json","data","catch","err","alert","handleClick","updateMethod","className","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","td","onClick","_c","$RefreshReg$"],"sources":["/Users/wujunyi/Desktop/Year2_Project/frontend/client2/src/App.js"],"sourcesContent":["import React, {useState} from \"react\"; \nimport Maze from './Maze';\n\nfunction App() {\n\n  // Create the container div and add it to the body\n  const buttonContainer = document.createElement('div');\n  buttonContainer.id = 'buttonContainer';\n  document.body.appendChild(buttonContainer);\n\n  // Create the four buttons\n  const btnForward = document.createElement('button');\n  btnForward.textContent = 'Forward';\n  const btnBackward = document.createElement('button');\n  btnBackward.textContent = 'Backward';\n  const btnLeft = document.createElement('button');\n  btnLeft.textContent = 'Left';\n  const btnRight = document.createElement('button');\n  btnRight.textContent = 'Right';\n\n  // Add the buttons to the container\n  buttonContainer.appendChild(btnForward);\n  buttonContainer.appendChild(btnBackward);\n  buttonContainer.appendChild(btnLeft);\n  buttonContainer.appendChild(btnRight);\n\n  // Add CSS styles to the container and buttons\n  buttonContainer.style.position = 'absolute';\n  buttonContainer.style.left = '50%';\n  buttonContainer.style.top = '50%';\n  buttonContainer.style.transform = 'translate(-50%, -50%)';\n  buttonContainer.style.textAlign = 'center';\n\nconst buttons = buttonContainer.getElementsByTagName('button');\nfor (let i = 0; i < buttons.length; i++) {\n  const button = buttons[i];\n  button.style.width = '200px';\n  button.style.height = '60px';\n  button.style.marginBottom = '10px';\n}\n\n\n  const [mazeMatrix, updateMap] = useState([[]]);\n\n  React.useEffect(() => { ///See CORS\n    fetch(\"http://localhost:3001/mazeMatrix/\") \n        .then((res) => res.json())\n        .then((data) => updateMap(data.mazeMatrix)) \n        .catch((err) => alert(err)\n    );\n  }, [updateMap]);\n\n  const handleClick = (updateMethod) => { \n    fetch(\"http://localhost:3001/mazeMatrix/\")\n      .then((res) => res.json())\n      .then((data) => updateMethod(data.mazeMatrix)) \n      .catch((err) => alert(err)\n    ); \n  }\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '36px' }}>EBB-Imperial   Maze</h1>\n      <Maze td = {mazeMatrix}/>\n      <button onClick={() => handleClick(updateMap)}>Randomize Maze</button>\n      <div id=\"buttonContainer\"></div>\n    </div> );\n}\nexport default App;\n\n\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       mazeMatrix: [\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//         [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n//         [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 0, 0, 1],\n//         [1, 0, 0, 0, 0, 0, 1, 0, 0, 1],\n//         [1, 0, 0, 0, 0, 0, 1, 0, 0, 1],\n//         [1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n//         [1, 0, 0, 1, 0, 0, 0, 0, 0, 1],\n//         [1, 0, 0, 1, 0, 0, 0, 0, 0, 1],\n//         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n//       ]\n//     };\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h1 style={{ fontSize: '36px' }}>Maze Game</h1>\n//         <div style={{ display: 'flex', justifyContent: 'center' }}>\n//           <div>\n//             {this.state.mazeMatrix.map((row, rowIndex) => (\n//               <div key={rowIndex}>\n//                 {row.map((cell, cellIndex) => (\n//                   <div\n//                     key={cellIndex}\n//                     style={{\n//                       display: 'inline-block',\n//                       width: '20px',\n//                       height: '20px',\n//                       backgroundColor: cell === 1 ? 'black' : 'white'\n//                     }}\n//                   />\n//                 ))}\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
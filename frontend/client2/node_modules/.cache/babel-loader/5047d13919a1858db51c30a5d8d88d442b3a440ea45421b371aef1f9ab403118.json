{"ast":null,"code":"var _jsxFileName = \"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Maze from './Import/Maze';\nimport * as Control_Module from './Import/Control_Button';\nimport Image_display from \"./Import/Image_display\";\nimport CreateDataTable from \"./Import/Data_table\";\nimport ReactPolling from \"react-polling/lib/ReactPolling\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  console.log(\"App called\");\n  const [buttonContainer, data] = Control_Module.Control_Button();\n  const [mazeMatrix, updateMap] = useState([[]]);\n  const [data_, updateData] = useState([[]]);\n\n  // Image_display();\n  // const data_ = [\n  //   { name: 'John Doe', age: 30, city: 'New York' },\n  //   { name: 'Jane Smith', age: 25, city: 'London' },\n  //   { name: 'Bob Johnson', age: 35, city: 'Paris' }\n  // ];\n  console.log(data_);\n  const pollingSuccess = jsonResponse => {\n    updateData(jsonResponse.data_);\n    return true;\n  };\n  const pollingFailure = () => {\n    alert('Polling failed');\n    return true;\n  };\n  const fetchData = () => {\n    return fetch(\"http://localhost:3001/display_data/\");\n  };\n  React.useEffect(() => {\n    ///See CORS\n    fetch(\"http://localhost:3001/mazeMatrix/\").then(res => res.json()).then(data => updateMap(data.mazeMatrix)).catch(err => alert(err));\n    fetch(\"http://localhost:3001/display_data\").then(res => res.json()).then(data => {\n      const get_table = CreateDataTable(data.data_);\n      document.body.appendChild(CreateDataTable(data.data_));\n    }).catch(err => alert(err));\n  }, [updateMap, updateData]);\n  // document.body.appendChild(CreateDataTable(data.data_)\n\n  const handleClickRandom = updateMethod => {\n    fetch(\"http://localhost:3001/mazeMatrix/\").then(res => res.json()).then(data => updateMethod(data.mazeMatrix)).catch(err => alert(err));\n  };\n\n  // const handleDateUpdate = (updateMethod) => { \n  //   fetch(\"http://localhost:3001/display_data/\")\n  //     .then((res) => res.json())\n  //     .then((data) => updateData(data.data_))\n  //     .catch((err) => alert(err));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '36px'\n      },\n      children: \"EBB-Imperial   Maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maze, {\n      td: mazeMatrix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClickRandom(updateMap),\n      children: \"Randomize Maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPolling, {\n      url: 'http://localhost:3001/display_data/',\n      interval: 500 // in milliseconds(ms)\n      ,\n      retryCount: 3 // this is optional\n      ,\n      onSuccess: pollingSuccess,\n      onFailure: pollingFailure,\n      promise: fetchData // custom api calling function that should return a promise\n      ,\n      render: _ref => {\n        let {\n          startPolling,\n          stopPolling,\n          isPolling\n        } = _ref;\n        const oldTable = document.getElementById('data_table');\n        const newTable = CreateDataTable(data_);\n        // document.replaceChild(newTable, oldTable);\n        console.log(\"old\", oldTable);\n        console.log(\"new\", newTable);\n        oldTable.replaceWith(newTable);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wBHkdtUa+xA0hQXTt7ZCiM8WD3w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Maze","Control_Module","Image_display","CreateDataTable","ReactPolling","jsxDEV","_jsxDEV","App","_s","console","log","buttonContainer","data","Control_Button","mazeMatrix","updateMap","data_","updateData","pollingSuccess","jsonResponse","pollingFailure","alert","fetchData","fetch","useEffect","then","res","json","catch","err","get_table","document","body","appendChild","handleClickRandom","updateMethod","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","td","onClick","id","url","interval","retryCount","onSuccess","onFailure","promise","render","_ref","startPolling","stopPolling","isPolling","oldTable","getElementById","newTable","replaceWith","_c","$RefreshReg$"],"sources":["/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js"],"sourcesContent":["import React, {useState} from \"react\"; \nimport Maze from './Import/Maze';\nimport * as Control_Module from './Import/Control_Button';\nimport Image_display from \"./Import/Image_display\";\nimport CreateDataTable from \"./Import/Data_table\";\nimport ReactPolling from \"react-polling/lib/ReactPolling\";\n\n\nfunction App() {\n  console.log(\"App called\");\n  const [buttonContainer, data] = Control_Module.Control_Button();\n  const [mazeMatrix, updateMap] = useState([[]]);\n  const [data_, updateData] = useState([[]]);\n\n  // Image_display();\n  // const data_ = [\n  //   { name: 'John Doe', age: 30, city: 'New York' },\n  //   { name: 'Jane Smith', age: 25, city: 'London' },\n  //   { name: 'Bob Johnson', age: 35, city: 'Paris' }\n  // ];\n  console.log(data_);\n  \n\n  const pollingSuccess = (jsonResponse) => {\n    updateData(jsonResponse.data_)\n    return true;\n  }\n  \n  const pollingFailure = () => { \n    alert('Polling failed');\n    return true;\n  }\n\n  const fetchData = () => {\n    return fetch(\"http://localhost:3001/display_data/\");\n  }\n  \n  React.useEffect(() => { ///See CORS\n    fetch(\"http://localhost:3001/mazeMatrix/\") \n        .then((res) => res.json())\n        .then((data) => updateMap(data.mazeMatrix)) \n        .catch((err) => alert(err)\n    );\n    fetch(\"http://localhost:3001/display_data\")\n        .then((res) => res.json())\n        .then((data) => {const get_table = CreateDataTable(data.data_);\n          document.body.appendChild(CreateDataTable(data.data_));})\n        .catch((err) => alert(err));\n  }, [updateMap, updateData]);\n  // document.body.appendChild(CreateDataTable(data.data_)\n\n  const handleClickRandom = (updateMethod) => { \n    fetch(\"http://localhost:3001/mazeMatrix/\")\n      .then((res) => res.json())\n      .then((data) => updateMethod(data.mazeMatrix)) \n      .catch((err) => alert(err)\n    );}\n  \n  // const handleDateUpdate = (updateMethod) => { \n  //   fetch(\"http://localhost:3001/display_data/\")\n  //     .then((res) => res.json())\n  //     .then((data) => updateData(data.data_))\n  //     .catch((err) => alert(err));\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '36px' }}>EBB-Imperial   Maze</h1>\n      <Maze td = {mazeMatrix}/>\n      <button onClick={() => handleClickRandom(updateMap)}>Randomize Maze</button>\n      <div id=\"result\"></div>\n      <ReactPolling\n        url={'http://localhost:3001/display_data/'}\n        interval= {500} // in milliseconds(ms)\n        retryCount={3} // this is optional\n        onSuccess = {pollingSuccess}\n        onFailure= {pollingFailure}\n        promise={fetchData} // custom api calling function that should return a promise\n        render={({ startPolling, stopPolling, isPolling }) => {\n          const oldTable = document.getElementById('data_table');\n          const newTable = CreateDataTable(data_);\n          // document.replaceChild(newTable, oldTable);\n          console.log(\"old\",oldTable);\n          console.log(\"new\",newTable);\n          oldTable.replaceWith(newTable);\n        }}\n        \n      />\n    </div> );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
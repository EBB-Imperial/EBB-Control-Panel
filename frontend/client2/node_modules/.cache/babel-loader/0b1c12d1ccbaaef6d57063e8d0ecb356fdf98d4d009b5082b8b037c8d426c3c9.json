{"ast":null,"code":"var _jsxFileName = \"/Users/wujunyi/Desktop/Year2_Project/frontend/client2/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.connectWalls = () => {\n      const {\n        mazeMatrix\n      } = this.state;\n      const connectedMatrix = mazeMatrix.map(row => [...row]);\n      const numRows = mazeMatrix.length;\n      const numCols = mazeMatrix[0].length;\n      for (let row = 1; row < numRows - 1; row++) {\n        for (let col = 1; col < numCols - 1; col++) {\n          if (mazeMatrix[row][col] === 0 && mazeMatrix[row - 1][col] === 1 && mazeMatrix[row + 1][col] === 1 && mazeMatrix[row][col - 1] === 1 && mazeMatrix[row][col + 1] === 1) {\n            connectedMatrix[row][col] = 1;\n          }\n        }\n      }\n      this.setState({\n        mazeMatrix: connectedMatrix\n      });\n    };\n    this.state = {\n      mazeMatrix: [[1, 1, 1, 1, 1], [1, 0, 0, 0, 1], [1, 1, 1, 0, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1]]\n    };\n  }\n  componentDidMount() {\n    this.connectWalls();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.mazeMatrix.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block',\n            width: '20px',\n            height: '20px',\n            backgroundColor: cell === 1 ? 'black' : 'white'\n          }\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","Component","constructor","props","connectWalls","mazeMatrix","state","connectedMatrix","map","row","numRows","length","numCols","col","setState","componentDidMount","render","children","rowIndex","cell","cellIndex","style","display","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/wujunyi/Desktop/Year2_Project/frontend/client2/src/App.js"],"sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mazeMatrix: [\n        [1, 1, 1, 1, 1],\n        [1, 0, 0, 0, 1],\n        [1, 1, 1, 0, 1],\n        [1, 0, 0, 0, 1],\n        [1, 1, 1, 1, 1]\n      ]\n    };\n  }\n\n  connectWalls = () => {\n    const { mazeMatrix } = this.state;\n    const connectedMatrix = mazeMatrix.map(row => [...row]);\n\n    const numRows = mazeMatrix.length;\n    const numCols = mazeMatrix[0].length;\n\n    for (let row = 1; row < numRows - 1; row++) {\n      for (let col = 1; col < numCols - 1; col++) {\n        if (\n          mazeMatrix[row][col] === 0 &&\n          mazeMatrix[row - 1][col] === 1 &&\n          mazeMatrix[row + 1][col] === 1 &&\n          mazeMatrix[row][col - 1] === 1 &&\n          mazeMatrix[row][col + 1] === 1\n        ) {\n          connectedMatrix[row][col] = 1;\n        }\n      }\n    }\n\n    this.setState({ mazeMatrix: connectedMatrix });\n  };\n\n  componentDidMount() {\n    this.connectWalls();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.mazeMatrix.map((row, rowIndex) => (\n          <div key={rowIndex}>\n            {row.map((cell, cellIndex) => (\n              <div\n                key={cellIndex}\n                style={{\n                  display: 'inline-block',\n                  width: '20px',\n                  height: '20px',\n                  backgroundColor: cell === 1 ? 'black' : 'white'\n                }}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
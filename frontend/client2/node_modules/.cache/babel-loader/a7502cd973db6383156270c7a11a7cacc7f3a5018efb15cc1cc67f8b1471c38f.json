{"ast":null,"code":"function Image_display() {\n  fetch('http://localhost:3001/Image_Url').then(response => response.blob()) // Get the image data as a Blob\n  .then(blob => {\n    const imgElement = document.createElement('img');\n    imgElement.id = 'image1';\n    imgElement.src = URL.createObjectURL(blob);\n    imgElement.style.position = 'absolute'; // Set position to absolute\n    imgElement.style.top = '300px'; // Set the top position in pixels\n    imgElement.style.right = '50px'; // Set the left position in pixels\n    imgElement.style.width = '400px'; // Set the width in pixels or other CSS units\n    imgElement.style.height = '400px'; // Set the height to 'auto' to maintain aspect ratio\n    const temp = document.getElementById('image1');\n    if (temp == null) {\n      document.body.appendChild(imgElement);\n    } else {}\n  }).catch(error => {\n    console.error(error);\n  });\n}\n_c = Image_display;\nexport default Image_display;\nvar _c;\n$RefreshReg$(_c, \"Image_display\");","map":{"version":3,"names":["Image_display","fetch","then","response","blob","imgElement","document","createElement","id","src","URL","createObjectURL","style","position","top","right","width","height","temp","getElementById","body","appendChild","catch","error","console","_c","$RefreshReg$"],"sources":["/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Image_display.js"],"sourcesContent":["function Image_display (){\n    fetch('http://localhost:3001/Image_Url')\n        .then(response => response.blob()) // Get the image data as a Blob\n        .then(blob => {\n            const imgElement = document.createElement('img');\n            imgElement.id = 'image1';\n            imgElement.src = URL.createObjectURL(blob);\n            imgElement.style.position = 'absolute'; // Set position to absolute\n            imgElement.style.top = '300px'; // Set the top position in pixels\n            imgElement.style.right = '50px'; // Set the left position in pixels\n            imgElement.style.width = '400px'; // Set the width in pixels or other CSS units\n            imgElement.style.height = '400px'; // Set the height to 'auto' to maintain aspect ratio\n            const temp = document.getElementById('image1')\n            if (temp == null){\n                document.body.appendChild(imgElement);\n            }\n            else{\n                \n            }\n        })\n        .catch(error => {\n            console.error(error);\n        });\n\n}\nexport default Image_display;"],"mappings":"AAAA,SAASA,aAAaA,CAAA,EAAG;EACrBC,KAAK,CAAC,iCAAiC,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAAA,CAClCF,IAAI,CAACE,IAAI,IAAI;IACV,MAAMC,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAChDF,UAAU,CAACG,EAAE,GAAG,QAAQ;IACxBH,UAAU,CAACI,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;IAC1CC,UAAU,CAACO,KAAK,CAACC,QAAQ,GAAG,UAAU,CAAC,CAAC;IACxCR,UAAU,CAACO,KAAK,CAACE,GAAG,GAAG,OAAO,CAAC,CAAC;IAChCT,UAAU,CAACO,KAAK,CAACG,KAAK,GAAG,MAAM,CAAC,CAAC;IACjCV,UAAU,CAACO,KAAK,CAACI,KAAK,GAAG,OAAO,CAAC,CAAC;IAClCX,UAAU,CAACO,KAAK,CAACK,MAAM,GAAG,OAAO,CAAC,CAAC;IACnC,MAAMC,IAAI,GAAGZ,QAAQ,CAACa,cAAc,CAAC,QAAQ,CAAC;IAC9C,IAAID,IAAI,IAAI,IAAI,EAAC;MACbZ,QAAQ,CAACc,IAAI,CAACC,WAAW,CAAChB,UAAU,CAAC;IACzC,CAAC,MACG,CAEJ;EACJ,CAAC,CAAC,CACDiB,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;AAEV;AAACE,EAAA,GAxBQzB,aAAa;AAyBtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
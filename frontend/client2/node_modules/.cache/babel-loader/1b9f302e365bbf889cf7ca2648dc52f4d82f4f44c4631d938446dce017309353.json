{"ast":null,"code":"var _jsxFileName = \"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport Maze from './Import/Maze';\nimport * as Control_Module from './Import/Control_Button';\nimport Image_display from \"./Import/Image_display\";\nimport CreateDataTable from \"./Import/Data_table\";\nimport ReactPolling from \"react-polling/lib/ReactPolling\";\nimport CreateProgressBar from \"./Import/Progress_Bar\";\nimport createCustomButton from \"./Import/Replay_button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  React.useEffect(() => {\n    ///See CORS\n    fetch(\"http://localhost:3001/mazeMatrix/\").then(res => res.json()).then(data => updateMap(data.mazeMatrix)).catch(err => alert(err));\n    fetch(\"http://localhost:3001/display_data\").then(res => res.json()).then(data => {\n      const get_table = CreateDataTable(data.data_);\n      if (document.getElementById('data_table') != null) {\n        document.getElementById('data_table').replaceWith(get_table);\n      } else {\n        document.body.appendChild(get_table);\n      }\n    }).catch(err => alert(err));\n    fetch(\"http://localhost:3001/robot_history/\").then(res => res.json())\n    //  .then((data) => alert(JSON.stringify(data)))\n    .catch(err => alert(err));\n  }, [updateMap, updateData]);\n\n  // document.body.appendChild(CreateDataTable(data.data_)\n  Control_Module.Control_Button();\n  const [mazeMatrix, updateMap] = useState([[]]);\n  const [data_, updateData] = useState([[]]);\n  const [replay, updateReplay] = useState(false);\n  const replayupdateReplay = (updateMethod, replay) => {\n    updateMethod(!replay);\n  };\n  Image_display();\n  console.log(replay);\n  const temp = document.getElementById('buttonContainer');\n  if (temp == null) {\n    var startButton = createCustomButton(\"Replay\", 150, 50, 1400, 100, startButton);\n    startButton.addEventListener('click', replayupdateReplay(updateReplay, replay));\n  }\n  const pollingSuccess = jsonResponse => {\n    updateData(jsonResponse.data_);\n    return true;\n  };\n  const pollingFailure = () => {\n    alert('Polling failed');\n    return true;\n  };\n  const fetchData = () => {\n    return fetch(\"http://localhost:3001/display_data/\");\n  };\n  const handleClickRandom = updateMethod => {\n    fetch(\"http://localhost:3001/mazeMatrix/\").then(res => res.json()).then(data => updateMethod(data.mazeMatrix)).catch(err => alert(err));\n  };\n\n  // const handleDateUpdate = (updateMethod) => { \n  //   fetch(\"http://localhost:3001/display_data/\")\n  //     .then((res) => res.json())\n  //     .then((data) => updateData(data.data_))\n  //     .catch((err) => alert(err));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '36px'\n      },\n      children: \" EBB-Imperial   Maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maze, {\n      td: mazeMatrix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClickRandom(updateMap),\n      children: \"Randomize Maze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      max: \"100\",\n      value: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPolling, {\n      url: 'http://localhost:3001/display_data/',\n      interval: 200 // in milliseconds(ms)\n      ,\n      retryCount: 3 // this is optional\n      ,\n      onSuccess: pollingSuccess,\n      onFailure: pollingFailure,\n      promise: fetchData // custom api calling function that should return a promise\n      ,\n      render: _ref => {\n        let {\n          startPolling,\n          stopPolling,\n          isPolling\n        } = _ref;\n        const oldTable = document.getElementById('data_table');\n        const newTable = CreateDataTable(data_);\n        // document.replaceChild(newTable, oldTable);\n        if (oldTable != null) {\n          oldTable.replaceWith(newTable);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"evM6Nq8Pa5abuf+ebsrC6ot7NPg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Maze","Control_Module","Image_display","CreateDataTable","ReactPolling","CreateProgressBar","createCustomButton","jsxDEV","_jsxDEV","App","_s","useEffect","fetch","then","res","json","data","updateMap","mazeMatrix","catch","err","alert","get_table","data_","document","getElementById","replaceWith","body","appendChild","updateData","Control_Button","replay","updateReplay","replayupdateReplay","updateMethod","console","log","temp","startButton","addEventListener","pollingSuccess","jsonResponse","pollingFailure","fetchData","handleClickRandom","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","td","onClick","id","max","value","url","interval","retryCount","onSuccess","onFailure","promise","render","_ref","startPolling","stopPolling","isPolling","oldTable","newTable","_c","$RefreshReg$"],"sources":["/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js"],"sourcesContent":["import React, {useState} from \"react\"; \nimport './App.css';\nimport Maze from './Import/Maze';\nimport * as Control_Module from './Import/Control_Button';\nimport Image_display from \"./Import/Image_display\";\nimport CreateDataTable from \"./Import/Data_table\";\nimport ReactPolling from \"react-polling/lib/ReactPolling\";\nimport CreateProgressBar from \"./Import/Progress_Bar\";\nimport createCustomButton from \"./Import/Replay_button\";\n\nfunction App() {\n  React.useEffect(() => { ///See CORS\n    fetch(\"http://localhost:3001/mazeMatrix/\") \n        .then((res) => res.json())\n        .then((data) => updateMap(data.mazeMatrix)) \n        .catch((err) => alert(err)\n    );\n    fetch(\"http://localhost:3001/display_data\")\n        .then((res) => res.json())\n        .then((data) => {\n          const get_table = CreateDataTable(data.data_);\n          if (document.getElementById('data_table') != null){\n            document.getElementById('data_table').replaceWith(get_table);\n          }\n          else {\n            document.body.appendChild(get_table)\n        }})\n        .catch((err) => alert(err));\n\n    fetch(\"http://localhost:3001/robot_history/\")\n         .then((res) => res.json())\n        //  .then((data) => alert(JSON.stringify(data)))\n         .catch((err) => alert(err)\n          );\n         \n  }, [updateMap, updateData]);\n  \n  // document.body.appendChild(CreateDataTable(data.data_)\n  Control_Module.Control_Button();\n  const [mazeMatrix, updateMap] = useState([[]]);\n  const [data_, updateData] = useState([[]]);\n  const [replay, updateReplay] = useState(false)\n  \n  const replayupdateReplay = (updateMethod, replay) => {\n    updateMethod(!replay)\n  }\n  \n  Image_display();\n\n  console.log(replay)\n\n  const temp = document.getElementById('buttonContainer');\n  if (temp == null){\n    var startButton = createCustomButton(\"Replay\", 150, 50, 1400, 100, startButton);\n    startButton.addEventListener('click', replayupdateReplay(updateReplay, replay))\n  }\n\n\n  const pollingSuccess = (jsonResponse) => {\n    updateData(jsonResponse.data_)\n    return true;\n  }\n  \n  const pollingFailure = () => { \n    alert('Polling failed');\n    return true;\n  }\n\n  const fetchData = () => {\n    return fetch(\"http://localhost:3001/display_data/\");\n  }\n  \n\n  const handleClickRandom = (updateMethod) => { \n    fetch(\"http://localhost:3001/mazeMatrix/\")\n      .then((res) => res.json())\n      .then((data) => updateMethod(data.mazeMatrix)) \n      .catch((err) => alert(err)\n    );}\n  \n  // const handleDateUpdate = (updateMethod) => { \n  //   fetch(\"http://localhost:3001/display_data/\")\n  //     .then((res) => res.json())\n  //     .then((data) => updateData(data.data_))\n  //     .catch((err) => alert(err));\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '36px' }}> EBB-Imperial   Maze</h1>\n      <Maze td = {mazeMatrix}/>\n      <button onClick={() => handleClickRandom(updateMap)}>Randomize Maze</button>\n      <div id=\"result\"></div>\n      <progress max=\"100\" value=\"50\"></progress>\n      <ReactPolling\n        url={'http://localhost:3001/display_data/'}\n        interval= {200} // in milliseconds(ms)\n        retryCount={3} // this is optional\n        onSuccess = {pollingSuccess}\n        onFailure= {pollingFailure}\n        promise={fetchData} // custom api calling function that should return a promise\n        render={({ startPolling, stopPolling, isPolling }) => {\n          const oldTable = document.getElementById('data_table');\n          const newTable = CreateDataTable(data_);\n          // document.replaceChild(newTable, oldTable);\n          if (oldTable != null){\n            oldTable.replaceWith(newTable);\n          }\n        }}\n      />\n    </div> );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
[{"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/index.js":"1","/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js":"2","/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/reportWebVitals.js":"3","/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Maze.js":"4","/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Control_Button.js":"5","/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Image_display.js":"6","/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Data_table.js":"7"},{"size":535,"mtime":1684932821747,"results":"8","hashOfConfig":"9"},{"size":3264,"mtime":1685290383972,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1684932821747,"results":"11","hashOfConfig":"9"},{"size":793,"mtime":1685283035687,"results":"12","hashOfConfig":"9"},{"size":3365,"mtime":1685112022936,"results":"13","hashOfConfig":"9"},{"size":884,"mtime":1685120481749,"results":"14","hashOfConfig":"9"},{"size":1107,"mtime":1685282427310,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"9p03za",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/index.js",[],[],[],"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/App.js",["40","41","42"],[],"import React, {useState} from \"react\"; \nimport Maze from './Import/Maze';\nimport * as Control_Module from './Import/Control_Button';\nimport Image_display from \"./Import/Image_display\";\nimport CreateDataTable from \"./Import/Data_table\";\nimport ReactPolling from \"react-polling/lib/ReactPolling\";\n\n\nfunction App() {\n  console.log(\"App called\");\n  const [buttonContainer, data] = Control_Module.Control_Button();\n  const [mazeMatrix, updateMap] = useState([[]]);\n  const [data_, updateData] = useState([[]]);\n\n  // Image_display();\n  // const data_ = [\n  //   { name: 'John Doe', age: 30, city: 'New York' },\n  //   { name: 'Jane Smith', age: 25, city: 'London' },\n  //   { name: 'Bob Johnson', age: 35, city: 'Paris' }\n  // ];\n  console.log(data_);\n  \n\n  const pollingSuccess = (jsonResponse) => {\n    updateData(jsonResponse.data_)\n    return true;\n  }\n  \n  const pollingFailure = () => { \n    alert('Polling failed');\n    return true;\n  }\n\n  const fetchData = () => {\n    return fetch(\"http://localhost:3001/display_data/\");\n  }\n  \n  React.useEffect(() => { ///See CORS\n    fetch(\"http://localhost:3001/mazeMatrix/\") \n        .then((res) => res.json())\n        .then((data) => updateMap(data.mazeMatrix)) \n        .catch((err) => alert(err)\n    );\n    fetch(\"http://localhost:3001/display_data\")\n        .then((res) => res.json())\n        .then((data) => {\n          const get_table = CreateDataTable(data.data_);\n          if (document.getElementById('data_table') != null){\n            document.getElementById('data_table').replaceWith(get_table);\n          }\n          else {\n            document.body.appendChild(get_table)\n        }})\n        .catch((err) => alert(err));\n  }, [updateMap, updateData]);\n  // document.body.appendChild(CreateDataTable(data.data_)\n\n  const handleClickRandom = (updateMethod) => { \n    fetch(\"http://localhost:3001/mazeMatrix/\")\n      .then((res) => res.json())\n      .then((data) => updateMethod(data.mazeMatrix)) \n      .catch((err) => alert(err)\n    );}\n  \n  // const handleDateUpdate = (updateMethod) => { \n  //   fetch(\"http://localhost:3001/display_data/\")\n  //     .then((res) => res.json())\n  //     .then((data) => updateData(data.data_))\n  //     .catch((err) => alert(err));\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ fontSize: '36px' }}>EBB-Imperial   Maze</h1>\n      <Maze td = {mazeMatrix}/>\n      <button onClick={() => handleClickRandom(updateMap)}>Randomize Maze</button>\n      <div id=\"result\"></div>\n      <ReactPolling\n        url={'http://localhost:3001/display_data/'}\n        interval= {500} // in milliseconds(ms)\n        retryCount={3} // this is optional\n        onSuccess = {pollingSuccess}\n        onFailure= {pollingFailure}\n        promise={fetchData} // custom api calling function that should return a promise\n        render={({ startPolling, stopPolling, isPolling }) => {\n          const oldTable = document.getElementById('data_table');\n          const newTable = CreateDataTable(data_);\n          // document.replaceChild(newTable, oldTable);\n          if (oldTable != null){\n            console.log(\"old\",oldTable);\n            console.log(\"new\",newTable);\n            oldTable.replaceWith(newTable);\n          }\n        }}\n        \n      />\n    </div> );\n}\nexport default App;\n","/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/reportWebVitals.js",[],[],[],"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Maze.js",[],[],"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Control_Button.js",[],[],"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Image_display.js",[],[],"/Users/wujunyi/Desktop/Year2_Project/EBB-Control-Panel/frontend/client2/src/Import/Data_table.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":21},{"ruleId":"43","severity":1,"message":"47","line":11,"column":10,"nodeType":"45","messageId":"46","endLine":11,"endColumn":25},{"ruleId":"43","severity":1,"message":"48","line":11,"column":27,"nodeType":"45","messageId":"46","endLine":11,"endColumn":31},"no-unused-vars","'Image_display' is defined but never used.","Identifier","unusedVar","'buttonContainer' is assigned a value but never used.","'data' is assigned a value but never used."]